name: "Build Image"
on:
  schedule:
    - cron: "0 0 */7 * *" # every week at midnight
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]

jobs:
  build-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
          - { name: "arch-latest", path:"latest/arch" }
          - { name: "ubuntu-latest", path:"latest/ubuntu" }
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to the GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: "v1.9.0"

      - name: Push to Docker Hub ${{ matrix.name.name }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.name.path }}
          tags: ghcr.io/hascal/hascal-${{ matrix.name.name }}:${{ github.ref }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
